// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String       @id @default(uuid())
  username  String       @unique
  email     String       @unique
  password  String
  clubs     Club[]       @relation("UserClubs")
  reviews   Review[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Club {
  id           String       @id @default(uuid())
  name         String
  description  String?
  users        User[]       @relation("UserClubs")
  readingLists ReadingList[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model ReadingList {
  id        String         @id @default(uuid())
  name      String
  club      Club           @relation(fields: [clubId], references: [id])
  clubId    String
  books     Book[]         @relation("ReadingListBooks")
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Book {
  id           String         @id @default(uuid())
  title        String
  author       String
  readingLists ReadingList[]  @relation("ReadingListBooks")
  reviews      Review[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Review {
  id        String    @id @default(uuid())
  content   String
  score     Int
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  book      Book      @relation(fields: [bookId], references: [id])
  bookId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
